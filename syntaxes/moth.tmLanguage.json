{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Moth",
	"patterns": [
		{
			"include": "#comments"
		},
		{
			"include": "#keywords"
		},
		{
			"include": "#constants"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#chars"
		},
		{
			"include": "#types"
		},
		{
			"include": "#namespaces"
		},
		{
			"include": "#attributes"
		},
		{
			"include": "#functions"
		},
		{
			"include": "#variables"
		}
	],
	"repository": {
		"comments": {
			"patterns": [
				{
					"name": "comment.line.double-slash.moth",
					"begin": "//",
					"end": "\n"
				},
				{
					"name": "comment.block.documentation.moth",
					"begin": "/> ?!DOCS\r?\n",
					"end": "</"
				},
				{
					"name": "comment.block.moth",
					"begin": "/>",
					"end": "</"
				}
			]
		},
		"keywords": {
			"patterns": [
			{
				"name": "keyword.control.moth",
				"match": "\\b(if|while|else|every|then|or|and|with|for|ret)\\b"
			},
			{
				"name": "keyword.other.moth",
				"match": "\\b(namespace|foreign|fn|static|pub|var|type|macro|impl|trait|virt|sealed|union|global|enum|extend)\\b"
			}
		]
		},
		"constants": {
			"patterns": [
				{
					"name": "constant.numeric.moth",
					"match": "\\b[0-9]+"
				},
				{
					"name": "constant.character.escape.moth",
					"match": "\\b(self|null|true|false|pi)\\b"
				}
			]
		},
		"chars": {
			"name": "string.quoted.single.moth",
			"begin": "'",
			"end": "'",
			"patterns": [
				{
					"name": "constant.character.escape.moth",
					"match": "\\\\."
				}
			]
		},
		"strings": {
			"name": "string.quoted.double.moth",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.moth",
					"match": "\\\\."
				}
			]
		},
		"types": {
			"patterns": [
				{
					"name": "support.type.moth",
					"match": "(#(\\([^)]+\\)|\\[[^\\]]+|\\(\\))[\\*&]*|#[A-Za-z_][A-Za-z0-9_]*[\\*&]*|\\?)"
				}
			]
		},
		"namespaces": {
			"patterns": [
				{
					"name": "support.type.moth",
					"match": "\\broot::[^\\.#]+"
				}
			]
		},
		"attributes": {
			"patterns": [
				{
					"name": "string.moth",
					"match": "@[A-Za-z_]+[A-Za-z_0-9]*"
				}
			]
		},
		"functions": {
			"patterns": [
				{
					"name": "support.function.moth",
					"match": "[A-Za-z_]+[A-Za-z_0-9]*\\("
				}
			]
		},
		"variables": {
			"patterns": [
				{
					"name": "variable.name.moth",
					"match": "[A-Za-z_]+[A-Za-z_0-9]*\\b"
				}
			]
		}
	},
	"scopeName": "source.moth"
}
